version: '2.1'

services:

  redis-cache:
    container_name: redis-cache
    image: redis:alpine
    volumes:
      - ./api_gateway/redis-data:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: exit 0

  partners-db:
    container_name: partners-db
    build: ./services/partners/src/db
    # volumes:
    #   - ./services/partners/src/db/mongo-data:/data/db
    ports:
      - '27017:27017'
    healthcheck:
      test: exit 0

  users-db:
    container_name: users-db
    build: ./services/users/src/db
    # volumes:
    #   - ./services/users/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  communities-db:
    container_name: communities-db
    build: ./services/communities/src/db
    # volumes:
    #   - ./services/communities/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0
  
  posts-db:
    container_name: posts-db
    build: ./services/posts/src/db
    # volumes:
    #   - ./services/posts/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5435:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  files-storage:
    container_name: files-storage
    build: ./services/posts/storage/
    volumes:
      - './services/posts/storage:/usr/src/app'
      - './services/posts/storage/package.json:/usr/src/package.json'
    ports:
      - '3007:3007'
  
  api-gateway:
    container_name: api-gateway
    build: ./api_gateway/
    volumes:
      - './api_gateway:/usr/src/app'
      - './api_gateway/package.json:/usr/src/package.json'
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
      - USERS_API_HOST=http://users-service:3004
      - PARTNERS_API_HOST=http://partners-service:3008
      - COMMUNITIES_API_HOST=http://communities-service:3005
      - POSTS_API_HOST=http://posts-service:3006
    depends_on:
      redis-cache:
        condition: service_started
    links:
      - redis-cache
      
  partners-service:
    container_name: partners-service
    build: ./services/partners/
    volumes:
      - './services/partners:/usr/src/app'
      - './services/partners/package.json:/usr/src/package.json'
    ports:
      - '3008:3008'
    environment:
      - DATABASE_URL=mongodb://partners-db:27017/partners_dev
      - DATABASE_TEST_URL=mongodb://partners-db:27017/partners_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      partners-db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    links:
      - partners-db
      - redis-cache

  users-service:
    container_name: users-service
    build: ./services/users/
    volumes:
      - './services/users:/usr/src/app'
      - './services/users/package.json:/usr/src/package.json'
    ports:
      - '3004:3004'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      users-db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    links:
      - users-db
      - redis-cache

  communities-service:
    container_name: communities-service
    build: ./services/communities/
    volumes:
      - './services/communities:/usr/src/app'
      - './services/communities/package.json:/usr/src/package.json'
    ports:
      - '3005:3005'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@communities-db:5432/communities_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@communities-db:5432/communities_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      communities-db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    links:
      - communities-db
      - redis-cache

  posts-service:
    container_name: posts-service
    build: ./services/posts/
    volumes:
      - './services/posts:/usr/src/app'
      - './services/posts/package.json:/usr/src/package.json'
    ports:
      - '3006:3006'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@posts-db:5432/posts_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@posts-db:5432/posts_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
      - FILES_STORAGE_HOST=http://files-storage:3007
    depends_on:
      posts-db:
        condition: service_healthy
      files-storage:
        condition: service_started
      redis-cache:
        condition: service_started
    links:
      - posts-db
      - files-storage
      - redis-cache

  swagger:
    container_name: swagger
    build: ./services/posts/swagger/
    volumes:
      - './services/posts/swagger:/usr/src/app'
      - './services/posts/swagger/package.json:/usr/src/package.json'
    ports:
      - '3009:3009'
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      posts-service:
        condition: service_started
    links:
      - posts-service

  web-client:
    container_name: web-client
    build: ./clients/web/
    volumes:
      - './clients/web:/usr/src/app'
      - './clients/web/package.json:/usr/src/package.json'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_HOST=http://localhost:3003
    depends_on:
      api-gateway:
        condition: service_started
    links:
      - api-gateway
