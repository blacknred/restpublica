version: '3'

services:

  redis-cache:
    container_name: redis-cache
    build: ./gateway/redis
    volumes:
      - ./gateway/redis/redis-data:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: exit 0

  users-db:
    container_name: users-db
    build: ./services/users/src/db
    volumes:
      - ./services/users/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  communities-db:
    container_name: communities-db
    build: ./services/communities/src/db
    volumes:
      - ./services/communities/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0
  
  posts-db:
    container_name: posts-db
    build: ./services/posts/src/db
    volumes:
      - ./services/posts/src/db/pg-data:/var/lib/postgresql/data
    ports:
      - '5435:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  partners-db:  
    container_name: partners-db
    build: ./services/partners/src/db
    volumes:
      - ./services/partners/src/db/mongo-data:/data/db
    ports:
      - '27017:27017'
    healthcheck:
      test: exit 0
  
  notifications-db:
    container_name: notifications-db
    build: ./services/notifications/src/db
    volumes:
      - ./services/notifications/src/db/mongo-data:/data/db
    ports:
      - '27018:27017'
    healthcheck:
      test: exit 0

  files-storage:
    container_name: files-storage
    build: ./services/storage/
    volumes:
      - './services/storage:/usr/src/app'
      - './services/storage/package.json:/usr/src/package.json'
    ports:
      - '3007:3000'

  users-service:
    container_name: users-service
    build: ./services/users/
    volumes:
      - './services/users:/usr/src/app'
      - './services/users/package.json:/usr/src/package.json'
    ports:
      - '3004:3000'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      - users-db
      - redis-cache
    links:
      - users-db
      - redis-cache

  communities-service:
    container_name: communities-service
    build: ./services/communities/
    volumes:
      - './services/communities:/usr/src/app'
      - './services/communities/package.json:/usr/src/package.json'
    ports:
      - '3005:3000'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@communities-db:5432/communities_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@communities-db:5432/communities_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      - communities-db
      - redis-cache
    links:
      - communities-db
      - redis-cache

  posts-service:
    container_name: posts-service
    build: ./services/posts/
    volumes:
      - './services/posts:/usr/src/app'
      - './services/posts/package.json:/usr/src/package.json'
    ports:
      - '3006:3000'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@posts-db:5432/posts_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@posts-db:5432/posts_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      - posts-db
      - files-storage
      - redis-cache
    links:
      - posts-db
      - files-storage
      - redis-cache

  partners-service: 
    container_name: partners-service
    build: ./services/partners/
    volumes:
      - './services/partners:/usr/src/app'
      - './services/partners/package.json:/usr/src/package.json'
    ports:
      - '3008:3000'
    environment:
      - DATABASE_URL=mongodb://partners-db:27017/partners_dev
      - DATABASE_TEST_URL=mongodb://partners-db:27017/partners_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      - partners-db
      - redis-cache
    links:
      - partners-db
      - redis-cache

  notifications-service:
    container_name: notifications-service
    build: ./services/notifications/
    volumes:
      - './services/notifications:/usr/src/app'
      - './services/notifications/package.json:/usr/src/package.json'
    ports:
      - '3009:3000'
    environment:
      - DATABASE_URL=mongodb://notifications-db:27018/notifications_dev
      - DATABASE_TEST_URL=mongodb://notifications-db:27018/notifications_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
    depends_on:
      - notifications-db
      - redis-cache
    links:
      - notifications-db
      - redis-cache

  gateway:
    container_name: gateway
    build: ./gateway/
    volumes:
      - './gateway:/usr/src/app'
      - './gateway/package.json:/usr/src/package.json'
    ports:
      - '3003:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - TOKEN_SECRET_2=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe'\xab\xa6L6\xdd\x8d[\xccO\xfe
      - REDIS_PASSWORD=default-password
    depends_on:
      - redis-cache
      - users-service
      - communities-service
      - posts-service
      - partners-service
      - notifications-service
    links:
      - redis-cache
      - users-service
      - communities-service
      - posts-service
      - partners-service
      - notifications-service

